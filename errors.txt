[0/5] Performing build step for 'lagom'
[1/32] Building CXX object Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URLParser.cpp.o
FAILED: Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URLParser.cpp.o 
/usr/bin/ccache /usr/bin/g++ -DLibCore_EXPORTS -I/home/d4gobert/devel/serenity/Meta/Lagom/../.. -I/home/d4gobert/devel/serenity/Meta/Lagom/../../Userland -I/home/d4gobert/devel/serenity/Meta/Lagom/../../Userland/Libraries -I/home/d4gobert/devel/serenity/Meta/Lagom/../../Userland/Services -I/home/d4gobert/devel/serenity/Build/lagom -I/home/d4gobert/devel/serenity/Build/lagom/Userland/Libraries -I/home/d4gobert/devel/serenity/Build/lagom/Userland/Services -std=c++20 -fPIC -Wall -Wextra -Werror -Wno-implicit-const-int-float-conversion -Wno-literal-suffix -Wno-maybe-uninitialized -Wno-unknown-warning-option -Wno-unused-command-line-argument -fsigned-char -fno-exceptions -fdiagnostics-color=always -g1 -O2 -fno-semantic-interposition -fPIC -Wno-expansion-to-defined -MD -MT Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URLParser.cpp.o -MF Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URLParser.cpp.o.d -o Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URLParser.cpp.o -c /home/d4gobert/devel/serenity/AK/URLParser.cpp
/home/d4gobert/devel/serenity/AK/URLParser.cpp:202:14: error: no declaration matches ‘AK::ErrorOr<AK::URL> AK::URLParser::parse(AK::StringView, const AK::URL*, AK::Optional<AK::URL>, AK::Optional<State>)’
  202 | ErrorOr<URL> URLParser::parse(StringView raw_input, URL const* base_url, Optional<URL> url, Optional<State> state_override)
      |              ^~~~~~~~~
In file included from /home/d4gobert/devel/serenity/AK/URLParser.cpp:14:
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/URLParser.h:58:16: note: candidate is: ‘static AK::URL AK::URLParser::parse(AK::StringView, const AK::URL*, AK::Optional<AK::URL>, AK::Optional<State>)’
   58 |     static URL parse(StringView input, URL const* base_url = nullptr, Optional<URL> url = {}, Optional<State> state_override = {});
      |                ^~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/URLParser.h:38:7: note: ‘class AK::URLParser’ defined here
   38 | class URLParser {
      |       ^~~~~~~~~
/home/d4gobert/devel/serenity/AK/URLParser.cpp:120:24: error: ‘AK::ErrorOr<AK::String> AK::percent_encode_after_encoding(StringView, URL::PercentEncodeSet, bool)’ defined but not used [-Werror=unused-function]
  120 | static ErrorOr<String> percent_encode_after_encoding(StringView input, URL::PercentEncodeSet percent_encode_set, bool space_as_plus = false)
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/d4gobert/devel/serenity/AK/URLParser.cpp:55:24: error: ‘AK::ErrorOr<AK::String> AK::parse_host(StringView, bool)’ defined but not used [-Werror=unused-function]
   55 | static ErrorOr<String> parse_host(StringView input, bool is_not_special = false)
      |                        ^~~~~~~~~~
/home/d4gobert/devel/serenity/AK/URLParser.cpp:22:13: error: ‘bool AK::is_url_code_point(u32)’ defined but not used [-Werror=unused-function]
   22 | static bool is_url_code_point(u32 code_point)
      |             ^~~~~~~~~~~~~~~~~
cc1plus: note: unrecognized command-line option ‘-Wno-unused-command-line-argument’ may have been intended to silence earlier diagnostics
cc1plus: note: unrecognized command-line option ‘-Wno-unknown-warning-option’ may have been intended to silence earlier diagnostics
cc1plus: note: unrecognized command-line option ‘-Wno-implicit-const-int-float-conversion’ may have been intended to silence earlier diagnostics
cc1plus: all warnings being treated as errors
[2/32] Building CXX object Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URL.cpp.o
FAILED: Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URL.cpp.o 
/usr/bin/ccache /usr/bin/g++ -DLibCore_EXPORTS -I/home/d4gobert/devel/serenity/Meta/Lagom/../.. -I/home/d4gobert/devel/serenity/Meta/Lagom/../../Userland -I/home/d4gobert/devel/serenity/Meta/Lagom/../../Userland/Libraries -I/home/d4gobert/devel/serenity/Meta/Lagom/../../Userland/Services -I/home/d4gobert/devel/serenity/Build/lagom -I/home/d4gobert/devel/serenity/Build/lagom/Userland/Libraries -I/home/d4gobert/devel/serenity/Build/lagom/Userland/Services -std=c++20 -fPIC -Wall -Wextra -Werror -Wno-implicit-const-int-float-conversion -Wno-literal-suffix -Wno-maybe-uninitialized -Wno-unknown-warning-option -Wno-unused-command-line-argument -fsigned-char -fno-exceptions -fdiagnostics-color=always -g1 -O2 -fno-semantic-interposition -fPIC -Wno-expansion-to-defined -MD -MT Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URL.cpp.o -MF Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URL.cpp.o.d -o Userland/Libraries/LibCore/CMakeFiles/LibCore.dir/home/d4gobert/devel/serenity/AK/URL.cpp.o -c /home/d4gobert/devel/serenity/AK/URL.cpp
In file included from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Optional.h:12,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/StringView.h:13,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/CheckedFormatString.h:12,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Format.h:9,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/DeprecatedString.h:9,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:10,
                 from /home/d4gobert/devel/serenity/AK/URL.cpp:10:
/home/d4gobert/devel/serenity/AK/URL.cpp: In constructor ‘AK::URL::URL(AK::StringView)’:
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Try.h:41:83: error: ‘class AK::URL’ has no member named ‘release_value’
   41 |         static_assert(!::AK::Detail::IsLvalueReference<decltype(_temporary_result.release_value())>, \
      |                                                                                   ^~~~~~~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:21:11: note: in expansion of macro ‘MUST’
   21 |     : URL(MUST(URLParser::parse(string)))
      |           ^~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Try.h:41:83: error: ‘class AK::URL’ has no member named ‘release_value’
   41 |         static_assert(!::AK::Detail::IsLvalueReference<decltype(_temporary_result.release_value())>, \
      |                                                                                   ^~~~~~~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:21:11: note: in expansion of macro ‘MUST’
   21 |     : URL(MUST(URLParser::parse(string)))
      |           ^~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Try.h:41:38: error: template argument 1 is invalid
   41 |         static_assert(!::AK::Detail::IsLvalueReference<decltype(_temporary_result.release_value())>, \
      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:21:11: note: in expansion of macro ‘MUST’
   21 |     : URL(MUST(URLParser::parse(string)))
      |           ^~~~
In file included from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Assertions.h:12,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/StdLibExtras.h:17,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Types.h:10,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/SinglyLinkedListSizePolicy.h:9,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Forward.h:10,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Iterator.h:9,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Array.h:9,
                 from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/CharacterTypes.h:10,
                 from /home/d4gobert/devel/serenity/AK/URL.cpp:8:
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Try.h:43:35: error: ‘class AK::URL’ has no member named ‘is_error’
   43 |         VERIFY(!_temporary_result.is_error());                                                       \
      |                                   ^~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:21:11: note: in expansion of macro ‘MUST’
   21 |     : URL(MUST(URLParser::parse(string)))
      |           ^~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Try.h:44:27: error: ‘class AK::URL’ has no member named ‘release_value’
   44 |         _temporary_result.release_value();                                                           \
      |                           ^~~~~~~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:21:11: note: in expansion of macro ‘MUST’
   21 |     : URL(MUST(URLParser::parse(string)))
      |           ^~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Try.h:37:5: error: invalid use of void expression
   37 |     ({                                                                                               \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |         /* Ignore -Wshadow to allow nesting the macro. */                                            \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |         AK_IGNORE_DIAGNOSTIC("-Wshadow",                                                             \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |             auto&& _temporary_result = (expression));                                                \
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |         static_assert(!::AK::Detail::IsLvalueReference<decltype(_temporary_result.release_value())>, \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |             "Do not return a reference from a fallible expression");                                 \
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |         VERIFY(!_temporary_result.is_error());                                                       \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |         _temporary_result.release_value();                                                           \
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   45 |     })
      |     ~~
/home/d4gobert/devel/serenity/AK/URL.cpp:21:11: note: in expansion of macro ‘MUST’
   21 |     : URL(MUST(URLParser::parse(string)))
      |           ^~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In member function ‘bool AK::URL::compute_validity() const’:
/home/d4gobert/devel/serenity/AK/URL.cpp:134:38: error: ‘const class AK::String’ has no member named ‘is_null’
  134 |     if (m_scheme == "file" && m_host.is_null())
      |                                      ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In static member function ‘static AK::URL AK::URL::create_with_file_scheme(const AK::String&, const AK::String&, const AK::String&)’:
/home/d4gobert/devel/serenity/AK/URL.cpp:166:34: error: no matching function for call to ‘AK::LexicalPath::LexicalPath(const AK::String&)’
  166 |     LexicalPath lexical_path(path);
      |                                  ^
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:22:14: note: candidate: ‘AK::LexicalPath::LexicalPath(AK::DeprecatedString)’
   22 |     explicit LexicalPath(DeprecatedString);
      |              ^~~~~~~~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:22:26: note:   no known conversion for argument 1 from ‘const AK::String’ to ‘AK::DeprecatedString’
   22 |     explicit LexicalPath(DeprecatedString);
      |                          ^~~~~~~~~~~~~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:20:7: note: candidate: ‘AK::LexicalPath::LexicalPath(const AK::LexicalPath&)’
   20 | class LexicalPath {
      |       ^~~~~~~~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:20:7: note:   no known conversion for argument 1 from ‘const AK::String’ to ‘const AK::LexicalPath&’
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:20:7: note: candidate: ‘AK::LexicalPath::LexicalPath(AK::LexicalPath&&)’
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:20:7: note:   no known conversion for argument 1 from ‘const AK::String’ to ‘AK::LexicalPath&&’
/home/d4gobert/devel/serenity/AK/URL.cpp:171:20: error: cannot convert ‘const char [5]’ to ‘AK::String’
  171 |     url.set_scheme("file");
      |                    ^~~~~~
      |                    |
      |                    const char [5]
/home/d4gobert/devel/serenity/AK/URL.cpp:51:29: note:   initializing argument 1 of ‘void AK::URL::set_scheme(AK::String)’
   51 | void URL::set_scheme(String scheme)
      |                      ~~~~~~~^~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:174:27: error: ‘const class AK::String’ has no member named ‘is_null’
  174 |     url.set_host(hostname.is_null() || hostname == "localhost" ? String::empty() : hostname);
      |                           ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:174:74: error: ‘empty’ is not a member of ‘AK::String’
  174 |     url.set_host(hostname.is_null() || hostname == "localhost" ? String::empty() : hostname);
      |                                                                          ^~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:175:37: error: cannot convert ‘Vector<AK::DeprecatedString>’ to ‘Vector<AK::String>’
  175 |     url.set_paths(lexical_path.parts());
      |                   ~~~~~~~~~~~~~~~~~~^~
      |                                     |
      |                                     Vector<AK::DeprecatedString>
/home/d4gobert/devel/serenity/AK/URL.cpp:85:36: note:   initializing argument 1 of ‘void AK::URL::set_paths(AK::Vector<AK::String>)’
   85 | void URL::set_paths(Vector<String> paths)
      |                     ~~~~~~~~~~~~~~~^~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:178:25: error: cannot convert ‘const char [1]’ to ‘AK::String’
  178 |         url.append_path("");
      |                         ^~
      |                         |
      |                         const char [1]
In file included from /home/d4gobert/devel/serenity/AK/URL.cpp:12:
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/URL.h:79:29: note:   initializing argument 1 of ‘void AK::URL::append_path(AK::String)’
   79 |     void append_path(String path) { m_paths.append(move(path)); }
      |                      ~~~~~~~^~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In static member function ‘static AK::URL AK::URL::create_with_help_scheme(const AK::String&, const AK::String&, const AK::String&)’:
/home/d4gobert/devel/serenity/AK/URL.cpp:185:34: error: no matching function for call to ‘AK::LexicalPath::LexicalPath(const AK::String&)’
  185 |     LexicalPath lexical_path(path);
      |                                  ^
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:22:14: note: candidate: ‘AK::LexicalPath::LexicalPath(AK::DeprecatedString)’
   22 |     explicit LexicalPath(DeprecatedString);
      |              ^~~~~~~~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:22:26: note:   no known conversion for argument 1 from ‘const AK::String’ to ‘AK::DeprecatedString’
   22 |     explicit LexicalPath(DeprecatedString);
      |                          ^~~~~~~~~~~~~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:20:7: note: candidate: ‘AK::LexicalPath::LexicalPath(const AK::LexicalPath&)’
   20 | class LexicalPath {
      |       ^~~~~~~~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:20:7: note:   no known conversion for argument 1 from ‘const AK::String’ to ‘const AK::LexicalPath&’
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:20:7: note: candidate: ‘AK::LexicalPath::LexicalPath(AK::LexicalPath&&)’
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:20:7: note:   no known conversion for argument 1 from ‘const AK::String’ to ‘AK::LexicalPath&&’
/home/d4gobert/devel/serenity/AK/URL.cpp:188:20: error: cannot convert ‘const char [5]’ to ‘AK::String’
  188 |     url.set_scheme("help");
      |                    ^~~~~~
      |                    |
      |                    const char [5]
/home/d4gobert/devel/serenity/AK/URL.cpp:51:29: note:   initializing argument 1 of ‘void AK::URL::set_scheme(AK::String)’
   51 | void URL::set_scheme(String scheme)
      |                      ~~~~~~~^~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:191:27: error: ‘const class AK::String’ has no member named ‘is_null’
  191 |     url.set_host(hostname.is_null() || hostname == "localhost" ? String::empty() : hostname);
      |                           ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:191:74: error: ‘empty’ is not a member of ‘AK::String’
  191 |     url.set_host(hostname.is_null() || hostname == "localhost" ? String::empty() : hostname);
      |                                                                          ^~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:192:37: error: cannot convert ‘Vector<AK::DeprecatedString>’ to ‘Vector<AK::String>’
  192 |     url.set_paths(lexical_path.parts());
      |                   ~~~~~~~~~~~~~~~~~~^~
      |                                     |
      |                                     Vector<AK::DeprecatedString>
/home/d4gobert/devel/serenity/AK/URL.cpp:85:36: note:   initializing argument 1 of ‘void AK::URL::set_paths(AK::Vector<AK::String>)’
   85 | void URL::set_paths(Vector<String> paths)
      |                     ~~~~~~~~~~~~~~~^~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:195:25: error: cannot convert ‘const char [1]’ to ‘AK::String’
  195 |         url.append_path("");
      |                         ^~
      |                         |
      |                         const char [1]
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/URL.h:79:29: note:   initializing argument 1 of ‘void AK::URL::append_path(AK::String)’
   79 |     void append_path(String path) { m_paths.append(move(path)); }
      |                      ~~~~~~~^~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In static member function ‘static AK::URL AK::URL::create_with_url_or_path(const AK::String&)’:
/home/d4gobert/devel/serenity/AK/URL.cpp:206:51: error: cannot convert ‘const AK::String’ to ‘AK::DeprecatedString’
  206 |     String path = LexicalPath::canonicalized_path(url_or_path);
      |                                                   ^~~~~~~~~~~
      |                                                   |
      |                                                   const AK::String
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/LexicalPath.h:42:62: note:   initializing argument 1 of ‘static AK::DeprecatedString AK::LexicalPath::canonicalized_path(AK::DeprecatedString)’
   42 |     [[nodiscard]] static DeprecatedString canonicalized_path(DeprecatedString);
      |                                                              ^~~~~~~~~~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: At global scope:
/home/d4gobert/devel/serenity/AK/URL.cpp:210:14: error: default argument given for parameter 3 of ‘static AK::ErrorOr<AK::URL> AK::URL::create_with_data(AK::String, AK::String, bool)’ [-fpermissive]
  210 | ErrorOr<URL> URL::create_with_data(String mime_type, String payload, bool is_base64 = false)
      |              ^~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/URL.h:103:25: note: previous specification in ‘static AK::ErrorOr<AK::URL> AK::URL::create_with_data(AK::String, AK::String, bool)’ here
  103 |     static ErrorOr<URL> create_with_data(String mime_type, String payload, bool is_base64 = false);
      |                         ^~~~~~~~~~~~~~~~
In file included from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Try.h:9:
/home/d4gobert/devel/serenity/AK/URL.cpp: In static member function ‘static AK::ErrorOr<AK::URL> AK::URL::create_with_data(AK::String, AK::String, bool)’:
/home/d4gobert/devel/serenity/AK/URL.cpp:212:41: error: cannot convert ‘const char [5]’ to ‘AK::StringView’
  212 |     auto scheme = TRY(String::from_utf8("data"));
      |                                         ^~~~~~
      |                                         |
      |                                         const char [5]
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Diagnostics.h:21:5: note: in definition of macro ‘AK_IGNORE_DIAGNOSTIC’
   21 |     statement;                                \
      |     ^~~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:212:19: note: in expansion of macro ‘TRY’
  212 |     auto scheme = TRY(String::from_utf8("data"));
      |                   ^~~
In file included from /home/d4gobert/devel/serenity/Meta/Lagom/../../AK/URL.h:11:
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/String.h:66:38: note:   initializing argument 1 of ‘static AK::ErrorOr<AK::String> AK::String::from_utf8(AK::StringView)’
   66 |     static ErrorOr<String> from_utf8(StringView);
      |                                      ^~~~~~~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Try.h:29:38: error: template argument 1 is invalid
   29 |         static_assert(!::AK::Detail::IsLvalueReference<decltype(_temporary_result.release_value())>, \
      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:212:19: note: in expansion of macro ‘TRY’
  212 |     auto scheme = TRY(String::from_utf8("data"));
      |                   ^~~
/home/d4gobert/devel/serenity/AK/URL.cpp:212:10: error: ‘void scheme’ has incomplete type
  212 |     auto scheme = TRY(String::from_utf8("data"));
      |          ^~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In member function ‘AK::ErrorOr<AK::String> AK::URL::serialize_data_url() const’:
/home/d4gobert/devel/serenity/AK/URL.cpp:226:30: error: ‘const class AK::String’ has no member named ‘is_null’
  226 |     VERIFY(!m_data_mime_type.is_null());
      |                              ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:226:5: note: in expansion of macro ‘VERIFY’
  226 |     VERIFY(!m_data_mime_type.is_null());
      |     ^~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:227:28: error: ‘const class AK::String’ has no member named ‘is_null’
  227 |     VERIFY(!m_data_payload.is_null());
      |                            ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:227:5: note: in expansion of macro ‘VERIFY’
  227 |     VERIFY(!m_data_payload.is_null());
      |     ^~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In member function ‘AK::ErrorOr<AK::String> AK::URL::serialize(ExcludeFragment) const’:
/home/d4gobert/devel/serenity/AK/URL.cpp:250:17: error: ‘const class AK::String’ has no member named ‘is_null’
  250 |     if (!m_host.is_null()) {
      |                 ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:270:20: error: ‘const class AK::String’ has no member named ‘is_null’
  270 |         if (m_host.is_null() && m_paths.size() > 1 && m_paths[0].is_empty())
      |                    ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:278:18: error: ‘const class AK::String’ has no member named ‘is_null’
  278 |     if (!m_query.is_null()) {
      |                  ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:283:64: error: ‘const class AK::String’ has no member named ‘is_null’
  283 |     if (exclude_fragment == ExcludeFragment::No && !m_fragment.is_null()) {
      |                                                                ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In member function ‘AK::ErrorOr<AK::String> AK::URL::serialize_for_display() const’:
/home/d4gobert/devel/serenity/AK/URL.cpp:304:17: error: ‘const class AK::String’ has no member named ‘is_null’
  304 |     if (!m_host.is_null()) {
      |                 ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:314:20: error: ‘const class AK::String’ has no member named ‘is_null’
  314 |         if (m_host.is_null() && m_paths.size() > 1 && m_paths[0].is_empty())
      |                    ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:322:18: error: ‘const class AK::String’ has no member named ‘is_null’
  322 |     if (!m_query.is_null()) {
      |                  ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:327:21: error: ‘const class AK::String’ has no member named ‘is_null’
  327 |     if (!m_fragment.is_null()) {
      |                     ^~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: At global scope:
/home/d4gobert/devel/serenity/AK/URL.cpp:338:41: error: non-member function ‘AK::DeprecatedString AK::to_deprecated_string()’ cannot have cv-qualifier
  338 | DeprecatedString to_deprecated_string() const
      |                                         ^~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In function ‘AK::DeprecatedString AK::to_deprecated_string()’:
/home/d4gobert/devel/serenity/AK/URL.cpp:340:24: error: ‘serialize’ was not declared in this scope
  340 |     auto result = MUST(serialize());
      |                        ^~~~~~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Diagnostics.h:21:5: note: in definition of macro ‘AK_IGNORE_DIAGNOSTIC’
   21 |     statement;                                \
      |     ^~~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:340:19: note: in expansion of macro ‘MUST’
  340 |     auto result = MUST(serialize());
      |                   ^~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/Try.h:41:38: error: template argument 1 is invalid
   41 |         static_assert(!::AK::Detail::IsLvalueReference<decltype(_temporary_result.release_value())>, \
      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:340:19: note: in expansion of macro ‘MUST’
  340 |     auto result = MUST(serialize());
      |                   ^~~~
/home/d4gobert/devel/serenity/AK/URL.cpp:340:10: error: ‘void result’ has incomplete type
  340 |     auto result = MUST(serialize());
      |          ^~~~~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In member function ‘AK::ErrorOr<AK::String> AK::URL::serialize_origin() const’:
/home/d4gobert/devel/serenity/AK/URL.cpp:357:20: error: could not convert ‘"null"’ from ‘const char [5]’ to ‘AK::ErrorOr<AK::String>’
  357 |             return "null";
      |                    ^~~~~~
      |                    |
      |                    const char [5]
/home/d4gobert/devel/serenity/AK/URL.cpp:360:16: error: could not convert ‘"null"’ from ‘const char [5]’ to ‘AK::ErrorOr<AK::String>’
  360 |         return "null";
      |                ^~~~~~
      |                |
      |                const char [5]
/home/d4gobert/devel/serenity/AK/URL.cpp: At global scope:
/home/d4gobert/devel/serenity/AK/URL.cpp:372:15: error: no declaration matches ‘AK::ErrorOr<bool> AK::URL::equals(const AK::URL&, ExcludeFragment) const’
  372 | ErrorOr<bool> URL::equals(URL const& other, ExcludeFragment exclude_fragments) const
      |               ^~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/URL.h:92:10: note: candidate is: ‘bool AK::URL::equals(const AK::URL&, ExcludeFragment) const’
   92 |     bool equals(URL const& other, ExcludeFragment = ExcludeFragment::No) const;
      |          ^~~~~~
/home/d4gobert/devel/serenity/Meta/Lagom/../../AK/URL.h:25:7: note: ‘class AK::URL’ defined here
   25 | class URL {
      |       ^~~
/home/d4gobert/devel/serenity/AK/URL.cpp: In member function ‘AK::ErrorOr<AK::String> AK::URL::basename() const’:
/home/d4gobert/devel/serenity/AK/URL.cpp:384:17: error: could not convert ‘<brace-enclosed initializer list>()’ from ‘<brace-enclosed initializer list>’ to ‘AK::ErrorOr<AK::String>’
  384 |         return {};
      |                 ^
      |                 |
      |                 <brace-enclosed initializer list>
/home/d4gobert/devel/serenity/AK/URL.cpp:386:17: error: could not convert ‘<brace-enclosed initializer list>()’ from ‘<brace-enclosed initializer list>’ to ‘AK::ErrorOr<AK::String>’
  386 |         return {};
      |                 ^
      |                 |
      |                 <brace-enclosed initializer list>
/home/d4gobert/devel/serenity/AK/URL.cpp: In static member function ‘static AK::ErrorOr<AK::String> AK::URL::percent_decode(AK::StringView)’:
/home/d4gobert/devel/serenity/AK/URL.cpp:457:16: error: could not convert ‘input’ from ‘AK::StringView’ to ‘AK::ErrorOr<AK::String>’
  457 |         return input;
      |                ^~~~~
      |                |
      |                AK::StringView
At global scope:
cc1plus: note: unrecognized command-line option ‘-Wno-unused-command-line-argument’ may have been intended to silence earlier diagnostics
cc1plus: note: unrecognized command-line option ‘-Wno-unknown-warning-option’ may have been intended to silence earlier diagnostics
cc1plus: note: unrecognized command-line option ‘-Wno-implicit-const-int-float-conversion’ may have been intended to silence earlier diagnostics
ninja: build stopped: subcommand failed.
FAILED: lagom-prefix/src/lagom-stamp/lagom-build /home/d4gobert/devel/serenity/Build/superbuild-x86_64/lagom-prefix/src/lagom-stamp/lagom-build 
cd /home/d4gobert/devel/serenity/Build/lagom && /usr/bin/cmake --build .
ninja: build stopped: subcommand failed.
