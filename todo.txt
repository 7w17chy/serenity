Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/Fetch/Infrastructure/HTTP/Responses.cpp:    auto location = AK::URLParser::parse(location_values.first(), &base_url);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/Fetch/Request.cpp:        auto parsed_url = URLParser::parse(input.get<DeprecatedString>(), &base_url);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/Fetch/Request.cpp:            auto parsed_referrer = URLParser::parse(referrer, &base_url);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/Fetch/Response.cpp:    auto parsed_url = URLParser::parse(url, &api_base_url);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:    auto result_url = URLParser::parse(DeprecatedString::formatted("{}:", protocol), nullptr, m_url, URLParser::State::SchemeStart);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:    auto result_url = URLParser::parse(host, nullptr, url, URLParser::State::Host);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:    auto result_url = URLParser::parse(hostname, nullptr, m_url, URLParser::State::Hostname);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:        auto result_url = URLParser::parse(port, nullptr, m_url, URLParser::State::Port);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:    auto result_url = URLParser::parse(pathname, nullptr, move(url), URLParser::State::PathStart);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:        auto result_url = URLParser::parse(input, nullptr, move(url_copy), URLParser::State::Query);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:        auto result_url = URLParser::parse(input, nullptr, move(url_copy), URLParser::State::Fragment);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/Location.cpp:    auto result_url = URLParser::parse(input, nullptr, copy_url, URLParser::State::Fragment);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/Scripting/Fetching.cpp:            auto url = URLParser::parse(after_prefix, &*resolution_result);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/Scripting/Fetching.cpp:        auto url = URLParser::parse(specifier, &base_url);
Build/x86_64/Root/usr/src/serenity/Userland/Libraries/LibWeb/HTML/Scripting/Fetching.cpp:    auto url = URLParser::parse(specifier);
Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:    auto result_url = URLParser::parse(DeprecatedString::formatted("{}:", protocol), nullptr, m_url, URLParser::State::SchemeStart);
Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:    auto result_url = URLParser::parse(host, nullptr, url, URLParser::State::Host);
Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:    auto result_url = URLParser::parse(hostname, nullptr, m_url, URLParser::State::Hostname);
Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:        auto result_url = URLParser::parse(port, nullptr, m_url, URLParser::State::Port);
Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:    auto result_url = URLParser::parse(pathname, nullptr, move(url), URLParser::State::PathStart);
Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:        auto result_url = URLParser::parse(input, nullptr, move(url_copy), URLParser::State::Query);
Userland/Libraries/LibWeb/HTML/HTMLHyperlinkElementUtils.cpp:        auto result_url = URLParser::parse(input, nullptr, move(url_copy), URLParser::State::Fragment);
